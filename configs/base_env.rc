ini_files = production.ini RANDOM:random.ini.tmpl:saml_random.ini.tmpl RC_DATA
# The file that will hold the generated random keys.
random_file = random.ini
*db_host = localhost
*db_user = assembl
# TODO: If generated remotely, fetch in fabfile
*db_password = assembl
*db_database = assembl
db_schema = public
_postgres_db_user = postgres
_postgres_db_password =
smtp_host = localhost
imap_host = localhost
piwik_host = localhost
*sentry_scheme = https
*sentry_host = localhost
_sentry_db_host = localhost
# _sentry_db_password =
# Replace with your admin email if necessary
assembl.admin_email = webmaster@%(public_hostname)s

memcached_host = localhost
mysql_host=localhost
webpack_host=localhost

elasticsearch_version=5.6.2
# Not used yet
elasticsearch_host=localhost
elasticsearch_index=assembl

_requirement_inputs = requirements.in requirements-chrouter.in
frozen_requirements = requirements-prod.frozen.txt

# External hostname: Will almost always be overridden in a host-specific rc file.
# Note that unlike _hosts, the DNS for public_hostname need not exist at time of creation.
public_hostname =
# Name of server, if different from public_hostname. Plural because could be applied to many servers.
# Will use public_hostname if empty
_hosts =
redis_host = localhost
# ZMQ model changes local socket (backend will connect to this)
# UNIQUE_PER_SERVER
# Convention:
# /0 - /3: reserved for development
# /4: reserved for automated testing
# /5 - /12: production
redis_socket = 5
# The port to use for the websocket (client frontends will connect to this)
# In prod, your firewall needs to allow this through or proxy it through nginx
# UNIQUE_PER_SERVER
# Convention:
# 8085 thru 8087: reserved for development
# 8088 thru 8089: reserved for automated testing
# 8090-: production
changes.websocket.port = 8090
# ZMQ model changes local socket (backend will connect to this)
# UNIQUE_PER_SERVER
# Convention:
# /0 thru /2: reserved for development
# /3 thru /4: reserved for automated testing
# /5-: production
changes.socket = ipc:///tmp/assembl_changes/5

_mac = false
# We now use systemd instead of a global supervisor
_uses_global_supervisor = false
_uses_memcache = true
_uses_ngnix = true
_uses_uwsgi = true
_gitrepo = https://github.com/assembl/assembl.git
_gitbranch = master
_is_production_env = true
# Legacy: Can be prod.wsgi, staging.wsgi or dev.wsgi.
_wsginame = prod.wsgi
_ini_file = local.ini
_projectname = assembl

# Those need to be overridden in the server-specific file
# _postgres_db_password
# _user
# _venvpath
# _projectpath
# _dbdumps_dir

# Optional - Path to SSL Stapling certificates, must be single file
# on server
oscp_path =

supervisor__autostart_celery_imap = true
supervisor__autostart_celery_notification_dispatch = true
supervisor__autostart_celery_notify = true
supervisor__autostart_celery_notify_beat = true
supervisor__autostart_celery_translate = false
supervisor__autostart_source_reader = true
supervisor__autostart_changes_router = true
supervisor__autostart_pserve = false
supervisor__autostart_nodesass = false
supervisor__autostart_gulp = false
supervisor__autostart_webpack = false
supervisor__autostart_uwsgi = true
supervisor__autostart_metrics_server = false
supervisor__autostart_edgesense_server = false
supervisor__autostart_elasticsearch_server = true
